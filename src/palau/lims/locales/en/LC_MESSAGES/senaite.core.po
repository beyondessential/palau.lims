msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-02-05 14:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI +ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0\n"
"Language-Code: en\n"
"Language-Name: English\n"
"Preferred-Encodings: utf-8 latin1\n"
"Domain: DOMAIN\n"

#: bika/lims/content/bikasetup.py:870
msgid " <p>The ID Server provides unique sequential IDs for objects such as Samples and Worksheets etc, based on a format specified for each content type.</p><p>The format is constructed similarly to the Python format syntax, using predefined variables per content type, and advancing the IDs through a sequence number, 'seq' and its padding as a number of digits, e.g. '03d' for a sequence of IDs from 001 to 999.</p><p>Alphanumeric prefixes for IDs are included as is in the formats, e.g. WS for Worksheet in WS-{seq:03d} produces sequential Worksheet IDs: WS-001, WS-002, WS-003 etc.</p><p>For dynamic generation of alphanumeric and sequential IDs, the wildcard {alpha} can be used. E.g WS-{alpha:2a3d} produces WS-AA001, WS-AA002, WS-AB034, etc.</p><p>Variables that can be used include:<table><tr><th style='width:150px'>Content Type</th><th>Variables</th></tr><tr><td>Client ID</td><td>{clientId}</td></tr><tr><td>Year</td><td>{year}</td></tr><tr><td>Sample ID</td><td>{sampleId}</td></tr><tr><td>Sample Type</td><td>{sampleType}</td></tr><tr><td>Sampling Date</td><td>{samplingDate}</td></tr><tr><td>Date Sampled</td><td>{dateSampled}</td></tr></table></p><p>Configuration Settings:<ul><li>format:<ul><li>a python format string constructed from predefined variables like sampleId, clientId, sampleType.</li><li>special variable 'seq' must be positioned last in theformat string</li></ul></li><li>sequence type: [generated|counter]</li><li>context: if type counter, provides context the counting function</li><li>counter type: [backreference|contained]</li><li>counter reference: a parameter to the counting function</li><li>prefix: default prefix if none provided in format string</li><li>split length: the number of parts to be included in the prefix</li></ul></p>"
msgstr " <p>The ID Server provides unique sequential IDs for objects such as Samples and Worksheets etc, based on a format specified for each content type.</p><p>The format is constructed similarly to the Python format syntax, using predefined variables per content type, and advancing the IDs through a sequence number, 'seq' and its padding as a number of digits, e.g. '03d' for a sequence of IDs from 001 to 999.</p><p>Alphanumeric prefixes for IDs are included as is in the formats, e.g. WS for Worksheet in WS-{seq:03d} produces sequential Worksheet IDs: WS-001, WS-002, WS-003 etc.</p><p>For dynamic generation of alphanumeric and sequential IDs, the wildcard {alpha} can be used. E.g WS-{alpha:2a3d} produces WS-AA001, WS-AA002, WS-AB034, etc.</p><p>Variables that can be used include:<table><tr><th style='width:150px'>Content Type</th><th>Variables</th></tr><tr><td>Client ID</td><td>{clientId}</td></tr><tr><td>Year</td><td>{year}</td></tr><tr><td>Sample ID</td><td>{sampleId}</td></tr><tr><td>Sample Type</td><td>{sampleType}</td></tr><tr><td>Sampling Date</td><td>{samplingDate}</td></tr><tr><td>Date of collection</td><td>{dateSampled}</td></tr></table></p><p>Configuration Settings:<ul><li>format:<ul><li>a python format string constructed from predefined variables like sampleId, clientId, sampleType.</li><li>special variable 'seq' must be positioned last in theformat string</li></ul></li><li>sequence type: [generated|counter]</li><li>context: if type counter, provides context the counting function</li><li>counter type: [backreference|contained]</li><li>counter reference: a parameter to the counting function</li><li>prefix: default prefix if none provided in format string</li><li>split length: the number of parts to be included in the prefix</li></ul></p>"

#: senaite/core/browser/samples/view.py:199
msgid "Client SID"
msgstr "Tamanu ID"

#: bika/lims/content/analysisrequest.py:834
msgid "Client Sample ID"
msgstr "Tamanu ID"

#: bika/lims/browser/workflow/analysisrequest.py:304
msgid "Could not transition samples to the sampled state"
msgstr "Could not transition samples to the collected state"

#: senaite/core/browser/samples/view.py:109
msgid "Date Sampled"
msgstr "Date of collection"

#: bika/lims/content/analysisrequest.py:804
msgid "Deviation between the sample and how it was sampled"
msgstr "Deviation between the sample and how it was collected"

#: senaite/core/browser/dashboard/dashboard.py:402
msgid "Samples to be sampled"
msgstr "Samples to be collected"

#: bika/lims/content/abstractbaseanalysis.py:411
msgid "The results of field analyses are captured during sampling at the sample point, e.g. the temperature of a water sample in the river where it is sampled. Lab analyses are done in the laboratory"
msgstr "The results of field analyses are captured during sampling at the sample point, e.g. the temperature of a water sample in the river where it is collected. Lab analyses are done in the laboratory"

#: senaite/core/browser/samples/view.py:255
msgid "To Be Sampled"
msgstr "To Be Collected"

#: senaite/core/browser/dashboard/dashboard.py:403
#: senaite/core/profiles/default/workflows/senaite_sample_workflow/definition.xml
msgid "To be sampled"
msgstr "To be collected"

#. The variables used here are the same as used in the strftime formating.
#. Supported are ${A}, ${a}, ${B}, ${b}, ${H}, ${I}, ${m}, ${d}, ${M}, ${p},
#. ${S}, ${Y}, ${y}, ${Z}, each used as variable in the msgstr.
#. For example: "${A} ${d}. ${B} ${Y}, ${H}:${M} ${Z}"
#. In english speaking countries default is:
#. ${b} ${d}, ${Y} ${I}:${M} ${p}
#: ./TranslationServiceTool.py
msgid "date_format_long"
msgstr "${m}/${d}/${Y} ${H}:${M}:${S}"

#. The variables used here are the same as used in the strftime formating.
#. Supported are ${A}, ${a}, ${B}, ${b}, ${H}, ${I}, ${m}, ${d}, ${M}, ${p},
#. ${S}, ${Y}, ${y}, ${Z}, each used as variable in the msgstr.
#. For example: "${A} ${d}. ${B} ${Y}, ${H}:${M} ${Z}"
#. In english speaking countries default is:
#. ${b} ${d}, ${Y}
#: ./TranslationServiceTool.py
msgid "date_format_short"
msgstr "${m}/${d}/${Y}"

#. Date format used with the datepicker jqueryui plugin.
#. Please only use 'dd', 'mm', 'yy', '-', '/', '.' in this string.
#. Default: "mm/dd/yy"
msgid "date_format_short_datepicker"
msgstr "mm/dd/yy"

#. Default: "'Min' and 'Max' values indicate a valid results range. Any result outside this results range will raise an alert.<br/>'Min warn' and 'Max warn' values indicate a shoulder range. Any result outside the results range but within the shoulder range will raise a less severe alert.<br/>If the result is out of range, the value set for '&lt; Min' or '&gt; Max' will be displayed in lists and results reports instead of the real result. In such case, the value set for 'Out of range comment' will be displayed in results report as well"
#: bika/lims/content/analysisspec.py:91
msgid "description_analysisspec_resultsrange"
msgstr "'Min' and 'Max' values indicate a valid results range. Any result outside this results range will raise an alert.<br/>'Min warn' and 'Max warn' values indicate a shoulder range. Any result outside the results range but within the shoulder range will raise a less severe alert.<br/>If the result is out of range, the value set for '&lt; Min' or '&gt; Max' will be displayed in lists and results reports instead of the real result. The value for 'Range comment' will be displayed if no value entered for 'Min' and 'Max', but for 'Range comment'"

#. Default: "Out of range comment"
#: bika/lims/browser/fields/resultrangefield.py:41
#: bika/lims/browser/widgets/analysisspecificationwidget.py:130
msgid "label_specs_rangecomment"
msgstr "Range comment"

#. The variables used here are the same as used in the strftime formating.
#. Supported are ${A}, ${a}, ${B}, ${b}, ${H}, ${I}, ${m}, ${d}, ${M}, ${p},
#. ${S}, ${Y}, ${y}, ${Z}, each used as variable in the msgstr.
#. For example: "${A} ${d}. ${B} ${Y}, ${H}:${M} ${Z}"
#. In english speaking countries default is:
#. ${I}:${M} ${p}
#: ./TranslationServiceTool.py
msgid "time_format"
msgstr "${H}:${M}:${S}"
