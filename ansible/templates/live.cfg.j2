[buildout]
extends =
    {{ plone_buildout_cfg }}

eggs +=
    Products.PrintingMailHost
    i18ndude
    pdbpp

parts +=
    i18ndude
    reset_permissions
    client_sync_tamanu
    sync_tamanu

environment-vars +=
    ENABLE_PRINTING_MAILHOST    False
    PTS_LANGUAGES               en ja

always-checkout = true

# Product dir
product-dir = ${buildout:directory}/src/palau.lims

# Override core's/plone's whatever default translations
# git@github.com:plone/plone.recipe.zope2instance#locales
locales = ${buildout:product-dir}/palau/lims/locales

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[reset_permissions]
# Restores ownership and permissions of var folder
recipe = collective.recipe.template
output = ${buildout:directory}/bin/reset_permissions
input = ${buildout:product-dir}/templates/reset_permissions.in
mode = 755

[zeoserver]
# By default, clients communicate with through a TCP/IP connection, that is
# defined in parameter `zeo-address`, that is declared in buildout's `zeoserver`
# and `client_base` parts. Nevertheless, ZEO supports a full path to a socket
# instead of an url. Let Zope clients communicate with ZEO over a socket, so at
# least no overhead as through the TCP connection.
zeo-address = ${buildout:var-dir}/zeoserver/zeo.socket
# Don't create a Data.fs.old before zeopack
#pack-keep-old = false

[client_base]
# Connect to zeoserver through a socket
zeo-address = ${zeoserver:zeo-address}
# Log level
event-log-level = ERROR
z2-log-level = ERROR
# RAM cache (num objects)
zodb-cache-size = 10000
# Persistent cache
zeo-client-cache-size = 256MB
zserver-threads = 4
# python /home/senaite/senaite/check_interval.py
python-check-interval = 7002

[client_reserved]
# Reserved-like clients start on port 8090
http-address = 127.0.0.1:8090
# Log level
event-log-level = INFO

[client_sync_tamanu]
# Specific client for the synchronization with Tamanu (see crontab)
<= client_base
recipe = plone.recipe.zope2instance
http-address = 127.0.0.1:8091
event-log-level = INFO

[sync_tamanu]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/sync_tamanu
input = ${buildout:product-dir}/templates/sync_tamanu.in
mode = 755
# zeo client to use for the synchronization with Tamanu
zeoclient = client_sync_tamanu
# Tamanu's host and credentials
host = {{ tamanu_host }}
credentials = {{ tamanu_user }}:{{ tamanu_pass }}
# Sync service requests that were created/modified since days/hours ago
sample_since = 5h
# Sync patients that were created/modified since days/hours ago
patients_since = 1d
